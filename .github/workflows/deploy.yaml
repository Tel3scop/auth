name: Go
run-name: Deploy to ${{ inputs.deploy_target }} by @${{ github.actor }}

env:
  REGISTRY: "cr.selcloud.ru/olezhek"
  IMAGE_NAME: "auth-server"
  CONTAINER_NAME: "auth-server-container"

on:
  push:
    branches: [ main, master, add-database ]
jobs:
  linter:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.54
          args: --timeout=30m --config=./.golangci.pipeline.yaml --issues-exit-code=0

  build-and-test:
    runs-on: ubuntu-latest
    needs: linter
    steps:
        - uses: actions/checkout@v4
        - name: Setup Go
          uses: actions/setup-go@v5
          with:
            go-version: '1.21'
            cache-dependency-path: go.sum

        - name: Build
          run: go build -o ./bin/ -v ./...

        - name: Test
          run: go test -v ./...
  copy-migrations:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
         key: ${{ secrets.SSHKEY }}
         known_hosts: ${{ secrets.SERVER_HOST }}

      - name: Deploy with rsync
        run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r ./migrations/** ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_HOST }}:~/auth/migrations

  image-build-and-push:
    runs-on: ubuntu-latest
    needs: copy-migrations
    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

      - name: Build and Push Docker Image
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME:$TAG_NAME -f ./Dockerfile .


  deploy-image:
    runs-on: ubuntu-latest
    needs: image-build-and-push
    steps:
      - name: Deploy to Selectel Cloud via SSH action
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME
          script: |
            # Set up variables
            TAG_NAME=$(echo $GITHUB_SHA | head -c7)
            sed -i "s/TAG_NAME=.*/TAG_NAME=$TAG_NAME/" auth/.env
            # Login into Selectel Registry
            docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY
           
            # Pull new registry container
            docker pull $REGISTRY/$IMAGE_NAME:$TAG_NAME
                      
            # Run a new container from a new image
            docker-compose up -d --force-recreate --build auth 
            
            # Run migrations
            docker-compose up -d --force-recreate --build migrator
